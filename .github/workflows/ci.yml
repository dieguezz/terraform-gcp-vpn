name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: {}

permissions:
  contents: read

env:
  TF_IN_AUTOMATION: true
  TERRAFORM_VERSION: 1.6.6

jobs:
  lint-root:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Terraform fmt
        run: terraform fmt -check -recursive

      - name: Init (no backend)
        run: terraform init -backend=false

      - name: Validate
        run: terraform validate

      - name: TFLint
        uses: terraform-linters/setup-tflint@19a52fbac37dacb22a09518e4ef6ee234f2d4987 # v4.0.0
        with:
          tflint_version: v0.51.1
      - name: Run TFLint
        run: tflint --recursive

      - name: Run tfsec
        uses: aquasecurity/tfsec-action@b466648d6e39e7c75324f25d83891162a721f2d6 # v1.0.3
        with:
          additional_args: --soft-fail # switch to hard fail later

  examples:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        example: [ minimal, with-scheduler, site-to-site ]
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Enter example directory
        working-directory: examples/${{ matrix.example }}
        run: echo "Using example ${{ matrix.example }}"

      - name: Terraform fmt
        working-directory: examples/${{ matrix.example }}
        run: terraform fmt -check -recursive

      - name: Init (no backend)
        working-directory: examples/${{ matrix.example }}
        run: terraform init -backend=false

      - name: Validate
        working-directory: examples/${{ matrix.example }}
        run: terraform validate

  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@19a52fbac37dacb22a09518e4ef6ee234f2d4987 # v4.0.0
        with:
          tflint_version: v0.51.1
      - name: Setup Go
        uses: actions/setup-go@3041bf56c941b39c61721a86cd11f3bb1338122a # v5.2.0
        with:
          go-version: '1.22'
      - name: Install terraform-docs
        run: go install github.com/terraform-docs/terraform-docs@v0.19.0
      - name: Install Trivy
        run: |
          set -euo pipefail
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sudo sh -s -- -b /usr/local/bin
      - name: Setup Python
        uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
        with:
          python-version: '3.x'
      - name: Install pre-commit
        run: pip install pre-commit
      - name: Run pre-commit (selected hooks)
        run: pre-commit run --show-diff-on-failure --color always --all-files
      - name: Terraform docs diff reminder
        if: failure()
        run: echo "Terraform docs need regeneration. Run pre-commit locally."
